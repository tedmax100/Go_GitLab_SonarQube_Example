image: bentolor/docker-dind-awscli:2.8.13

services:
  - name: docker:27.1.2-dind

variables:
  GIT_DEPTH: 1  # Reducing the Git history depth helps to speed up clone operations

stages:
  - test
  - job

go-test:
  stage: test
  image: golang:1.23
  variables:
    GOPRIVATE: "gitlab.com/xxxx"
    GOPATH: $CI_PROJECT_DIR/.go
    GOCACHE: $CI_PROJECT_DIR/.go-cache
  cache:
    paths:
      - .go/pkg/mod/
      - .go-cache/
  before_script:
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.com/".insteadOf "https://gitlab.com/"
    - mkdir -p .go .go-cache
    - go mod download
  script:
    - go test ./... -v -coverprofile=coverage.out
    - go tool cover -func="coverage.out"
    - go test ./... -json > test.out
  artifacts:
    paths:
      - coverage.out
      - test.out
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.out
    expire_in: 1 day

sonarqube-check:
  stage: job
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: ['']
  dependencies:
    - go-test
  variables:
    SONAR_USER_HOME: '${CI_PROJECT_DIR}/.sonar' # Defines the location of the analysis task cache
    GIT_DEPTH: '0' # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: '${CI_JOB_NAME}'
    paths:
      - .sonar/cache
  before_script:
    - pwd
    - ls -la
    - ls -la coverage.out || echo "coverage.out not found"
    - ls -la test.out || echo "test.out not found"
  script:
    - cat sonar-project.properties
    - sonar-scanner -Dsonar.projectBaseDir=${CI_PROJECT_DIR}
  allow_failure: false
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
